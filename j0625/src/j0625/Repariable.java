package j0625;
public interface Repariable {

}
/* 인터페이스 : 
   - 내부의 모든 메서드는 public abstract로 정의
   - 내부 모든 필드는 public static final (상수)
   - 클래스에 다중 구형능ㄹ 지원 (implements A, B)
   - 인터페이스끼리 다중 상속 지원 (extends A, B)
   - 인터페이스는 상속관계에 얽매이지 않고, 공통기능이 필요할때마다
     추상메서드를 정의하고 구현함 - 자유롭게 붙였다 뗏다 가능
   - 인터페이스는 구현객체가 같은 동작을 한다는 것을 보장하기 위해 사용
   - 주로 서로 관련이 없는 클래스를 묶고싶을때 사용
   추상클래스
   - 하위클래스의 공통점들을 모아 추상화해서 만든 클래스
   - 다중상속이 불가능. 단일 상속만 허용
   - 추상클래스는 추상메서드 외 일반적 필드, 메서드, 생성자를 가짐
   - 추상클래스는 클래스간 연관관계를 구축하는것에 초점
   - extends를 사용해 자신의 기능을 클래스로 확장

*/
